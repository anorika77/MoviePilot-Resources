# .github/workflows/build.yml
name: 编译 Windows x64 资源包 (标签触发)

on:
  push:
    tags:
      - 'v*'

jobs:
  compile-windows-x64:
    name: 编译 Windows x64 - Python ${{ matrix.python-version }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10.11"]
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 计算产物名称
        id: artifact_name
        run: |
          $py_ver = "${{ matrix.python-version }}".Replace(".", "")
          $artifact_name = "sites.cp$py_ver-win_amd64.pyd"
          echo "ARTIFACT_NAME=$artifact_name" >> $env:GITHUB_ENV

      - name: 设置 Python（x64 架构）
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: 安装编译依赖
        run: |
          choco install -y mingw --version=11.2.0
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
          python -m pip install --upgrade pip setuptools wheel cython

      - name: 编译扩展模块（需替换真实命令）
        run: |
          mkdir -p build/app/helper
          echo "模拟编译产物: ${{ env.ARTIFACT_NAME }}" > build/app/helper/${{ env.ARTIFACT_NAME }}

      - name: 验证产物
        run: |
          if (-not (Test-Path "build/app/helper/${{ env.ARTIFACT_NAME }}")) {
            Write-Error "产物缺失: ${{ env.ARTIFACT_NAME }}"
            exit 1
          }

      - name: 打包资源（修复 PowerShell 命令语法）
        run: |
          mkdir -p artifacts/app/helper
          Copy-Item -Path "build/app/helper/${{ env.ARTIFACT_NAME }}" -Destination "artifacts/app/helper/" -Force
          Copy-Item -Path LICENSE -Destination artifacts -ErrorAction SilentlyContinue
          Copy-Item -Path package.json -Destination artifacts -ErrorAction SilentlyContinue
          Copy-Item -Path package.v2.json -Destination artifacts -ErrorAction SilentlyContinue
          echo "资源版本：${{ github.ref_name }}" | Out-File -FilePath "artifacts/VERSION" -Encoding utf8

      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: Windows-x64-py${{ matrix.python-version }}-${{ github.ref_name }}
          path: artifacts/

  create-release:
    needs: compile-windows-x64
    runs-on: ubuntu-latest
    steps:
      - name: 下载产物
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: 创建 Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            all-artifacts/**/*.pyd
            all-artifacts/**/LICENSE
            all-artifacts/**/package*.json
            all-artifacts/**/VERSION
